#spring.datasource.url=jdbc:mysql://localhost:3306/test?serverTimezone=GMT%2B8
#spring.datasource.username=root
#spring.datasource.password=123abc
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
# Mybatis 配置
mybatis.type-aliases-package=cn.eric.springbootsharding.domain
mybatis.mapper-locations=classpath:mapper/*.xml
mybatis.cconfiguration.map-underscore-to-camel-case=true
## hibernate.ddl-auto=none 是因为分表就会有多个表，例如t_order_0、t_order_1等，而ORM只能映射成一个，所以关闭自动的ddl语句
spring.jpa.database=mysql
#spring.jpa.properties.hibernate.hbm2ddl.auto=none
spring.jpa.hibernate.ddl-auto=none
# spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect
spring.jpa.show-sql=true
# debug=true
# spring.profiles.active=dev
spring.application.name=springboot
server.port=9092
# file 和 path 不能同时配置，只能配置其中一个
# logging.file=/Users/mengday/Documents/logs/demo.log
logging.path=/logs/springboot
logging.pattern.dateformat=yyyy-MM-dd HH:mm:ss.SSS
logging.pattern.console=%clr(%d{${LOG_DATEFORMAT_PATTERN:-yyyy-MM-dd HH:mm:ss.SSS}}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}
logging.pattern.file=%d{${LOG_DATEFORMAT_PATTERN:-yyyy-MM-dd HH:mm:ss.SSS}} ${LOG_LEVEL_PATTERN:-%5p} ${PID:- } --- [%t] %-40.40logger{39} : %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}
logging.file.max-size=1MB
logging.file.max-history=30
# 打印mybatis中的sql语句和结果集
logging.level.com.company.shardingjdbc.mapper=TRACE
#logging.level.com.example.demo.repositorty=debug
logging.level.cn.eric.springbootsharding.controller=info
##logging.config=classpath:logback-${spring.profiles.active}.xml


